<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.itbat.whh.gateway.dao.mapper.GwServiceDOMapper">
  <resultMap id="BaseResultMap" type="cn.itbat.whh.gateway.dao.model.GwServiceDO">
    <id column="service_ukid" jdbcType="BIGINT" property="serviceUkid"/>
    <result column="service_desc" jdbcType="VARCHAR" property="serviceDesc"/>
    <result column="service_type" jdbcType="VARCHAR" property="serviceType"/>
    <result column="service_properties" jdbcType="VARCHAR" property="serviceProperties"/>
    <result column="service_key" jdbcType="VARCHAR" property="serviceKey"/>
    <result column="service_version" jdbcType="VARCHAR" property="serviceVersion"/>
    <result column="service_name" jdbcType="VARCHAR" property="serviceName"/>
    <result column="application_group" jdbcType="VARCHAR" property="applicationGroup"/>
    <result column="is_test" jdbcType="INTEGER" property="isTest"/>
    <result column="test_ip" jdbcType="VARCHAR" property="testIp"/>
    <result column="test_port" jdbcType="VARCHAR" property="testPort"/>
    <result column="is_async" jdbcType="INTEGER" property="isAsync"/>
    <result column="service_retry" jdbcType="INTEGER" property="serviceRetry"/>
    <result column="service_group" jdbcType="VARCHAR" property="serviceGroup"/>
    <result column="async_notify_url" jdbcType="VARCHAR" property="asyncNotifyUrl"/>
    <result column="time_out" jdbcType="INTEGER" property="timeOut"/>
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime"/>
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="("
                    separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="("
                    separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    service_ukid, service_desc, service_type, service_properties, service_key, service_version,
    service_name, application_group, is_test, test_ip, test_port, is_async, service_retry,
    service_group, async_notify_url, time_out, add_time, update_time
  </sql>
  <select id="selectByExample"
    parameterType="cn.itbat.whh.gateway.dao.model.GwServiceDOExample"
    resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from gw_service
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from gw_service
    where service_ukid = #{serviceUkid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from gw_service
    where service_ukid = #{serviceUkid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample"
    parameterType="cn.itbat.whh.gateway.dao.model.GwServiceDOExample">
    delete from gw_service
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="cn.itbat.whh.gateway.dao.model.GwServiceDO">
    insert into gw_service (service_ukid, service_desc, service_type,
    service_properties, service_key, service_version,
    service_name, application_group, is_test,
    test_ip, test_port, is_async,
    service_retry, service_group, async_notify_url,
    time_out, add_time, update_time
    )
    values (#{serviceUkid,jdbcType=BIGINT}, #{serviceDesc,jdbcType=VARCHAR},
    #{serviceType,jdbcType=VARCHAR},
    #{serviceProperties,jdbcType=VARCHAR}, #{serviceKey,jdbcType=VARCHAR},
    #{serviceVersion,jdbcType=VARCHAR},
    #{serviceName,jdbcType=VARCHAR}, #{applicationGroup,jdbcType=VARCHAR},
    #{isTest,jdbcType=INTEGER},
    #{testIp,jdbcType=VARCHAR}, #{testPort,jdbcType=VARCHAR}, #{isAsync,jdbcType=INTEGER},
    #{serviceRetry,jdbcType=INTEGER}, #{serviceGroup,jdbcType=VARCHAR},
    #{asyncNotifyUrl,jdbcType=VARCHAR},
    #{timeOut,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}, now()
    )
  </insert>
  <insert id="insertSelective" parameterType="cn.itbat.whh.gateway.dao.model.GwServiceDO">
    insert into gw_service
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="serviceUkid != null">
        service_ukid,
      </if>
      <if test="serviceDesc != null">
        service_desc,
      </if>
      <if test="serviceType != null">
        service_type,
      </if>
      <if test="serviceProperties != null">
        service_properties,
      </if>
      <if test="serviceKey != null">
        service_key,
      </if>
      <if test="serviceVersion != null">
        service_version,
      </if>
      <if test="serviceName != null">
        service_name,
      </if>
      <if test="applicationGroup != null">
        application_group,
      </if>
      <if test="isTest != null">
        is_test,
      </if>
      <if test="testIp != null">
        test_ip,
      </if>
      <if test="testPort != null">
        test_port,
      </if>
      <if test="isAsync != null">
        is_async,
      </if>
      <if test="serviceRetry != null">
        service_retry,
      </if>
      <if test="serviceGroup != null">
        service_group,
      </if>
      <if test="asyncNotifyUrl != null">
        async_notify_url,
      </if>
      <if test="timeOut != null">
        time_out,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      update_time,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="serviceUkid != null">
        #{serviceUkid,jdbcType=BIGINT},
      </if>
      <if test="serviceDesc != null">
        #{serviceDesc,jdbcType=VARCHAR},
      </if>
      <if test="serviceType != null">
        #{serviceType,jdbcType=VARCHAR},
      </if>
      <if test="serviceProperties != null">
        #{serviceProperties,jdbcType=VARCHAR},
      </if>
      <if test="serviceKey != null">
        #{serviceKey,jdbcType=VARCHAR},
      </if>
      <if test="serviceVersion != null">
        #{serviceVersion,jdbcType=VARCHAR},
      </if>
      <if test="serviceName != null">
        #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="applicationGroup != null">
        #{applicationGroup,jdbcType=VARCHAR},
      </if>
      <if test="isTest != null">
        #{isTest,jdbcType=INTEGER},
      </if>
      <if test="testIp != null">
        #{testIp,jdbcType=VARCHAR},
      </if>
      <if test="testPort != null">
        #{testPort,jdbcType=VARCHAR},
      </if>
      <if test="isAsync != null">
        #{isAsync,jdbcType=INTEGER},
      </if>
      <if test="serviceRetry != null">
        #{serviceRetry,jdbcType=INTEGER},
      </if>
      <if test="serviceGroup != null">
        #{serviceGroup,jdbcType=VARCHAR},
      </if>
      <if test="asyncNotifyUrl != null">
        #{asyncNotifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="timeOut != null">
        #{timeOut,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      now(),
    </trim>
  </insert>
  <select id="countByExample"
    parameterType="cn.itbat.whh.gateway.dao.model.GwServiceDOExample"
    resultType="java.lang.Long">
    select count(*) from gw_service
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update gw_service
    <set>
      <if test="record.serviceUkid != null">
        service_ukid = #{record.serviceUkid,jdbcType=BIGINT},
      </if>
      <if test="record.serviceDesc != null">
        service_desc = #{record.serviceDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceType != null">
        service_type = #{record.serviceType,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceProperties != null">
        service_properties = #{record.serviceProperties,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceKey != null">
        service_key = #{record.serviceKey,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceVersion != null">
        service_version = #{record.serviceVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceName != null">
        service_name = #{record.serviceName,jdbcType=VARCHAR},
      </if>
      <if test="record.applicationGroup != null">
        application_group = #{record.applicationGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.isTest != null">
        is_test = #{record.isTest,jdbcType=INTEGER},
      </if>
      <if test="record.testIp != null">
        test_ip = #{record.testIp,jdbcType=VARCHAR},
      </if>
      <if test="record.testPort != null">
        test_port = #{record.testPort,jdbcType=VARCHAR},
      </if>
      <if test="record.isAsync != null">
        is_async = #{record.isAsync,jdbcType=INTEGER},
      </if>
      <if test="record.serviceRetry != null">
        service_retry = #{record.serviceRetry,jdbcType=INTEGER},
      </if>
      <if test="record.serviceGroup != null">
        service_group = #{record.serviceGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.asyncNotifyUrl != null">
        async_notify_url = #{record.asyncNotifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.timeOut != null">
        time_out = #{record.timeOut,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      update_time = now(),
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update gw_service
    set service_ukid = #{record.serviceUkid,jdbcType=BIGINT},
    service_desc = #{record.serviceDesc,jdbcType=VARCHAR},
    service_type = #{record.serviceType,jdbcType=VARCHAR},
    service_properties = #{record.serviceProperties,jdbcType=VARCHAR},
    service_key = #{record.serviceKey,jdbcType=VARCHAR},
    service_version = #{record.serviceVersion,jdbcType=VARCHAR},
    service_name = #{record.serviceName,jdbcType=VARCHAR},
    application_group = #{record.applicationGroup,jdbcType=VARCHAR},
    is_test = #{record.isTest,jdbcType=INTEGER},
    test_ip = #{record.testIp,jdbcType=VARCHAR},
    test_port = #{record.testPort,jdbcType=VARCHAR},
    is_async = #{record.isAsync,jdbcType=INTEGER},
    service_retry = #{record.serviceRetry,jdbcType=INTEGER},
    service_group = #{record.serviceGroup,jdbcType=VARCHAR},
    async_notify_url = #{record.asyncNotifyUrl,jdbcType=VARCHAR},
    time_out = #{record.timeOut,jdbcType=INTEGER},
    add_time = #{record.addTime,jdbcType=TIMESTAMP},
    update_time = now()
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective"
    parameterType="cn.itbat.whh.gateway.dao.model.GwServiceDO">
    update gw_service
    <set>
      <if test="serviceDesc != null">
        service_desc = #{serviceDesc,jdbcType=VARCHAR},
      </if>
      <if test="serviceType != null">
        service_type = #{serviceType,jdbcType=VARCHAR},
      </if>
      <if test="serviceProperties != null">
        service_properties = #{serviceProperties,jdbcType=VARCHAR},
      </if>
      <if test="serviceKey != null">
        service_key = #{serviceKey,jdbcType=VARCHAR},
      </if>
      <if test="serviceVersion != null">
        service_version = #{serviceVersion,jdbcType=VARCHAR},
      </if>
      <if test="serviceName != null">
        service_name = #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="applicationGroup != null">
        application_group = #{applicationGroup,jdbcType=VARCHAR},
      </if>
      <if test="isTest != null">
        is_test = #{isTest,jdbcType=INTEGER},
      </if>
      <if test="testIp != null">
        test_ip = #{testIp,jdbcType=VARCHAR},
      </if>
      <if test="testPort != null">
        test_port = #{testPort,jdbcType=VARCHAR},
      </if>
      <if test="isAsync != null">
        is_async = #{isAsync,jdbcType=INTEGER},
      </if>
      <if test="serviceRetry != null">
        service_retry = #{serviceRetry,jdbcType=INTEGER},
      </if>
      <if test="serviceGroup != null">
        service_group = #{serviceGroup,jdbcType=VARCHAR},
      </if>
      <if test="asyncNotifyUrl != null">
        async_notify_url = #{asyncNotifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="timeOut != null">
        time_out = #{timeOut,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      update_time = now(),
    </set>
    where service_ukid = #{serviceUkid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.itbat.whh.gateway.dao.model.GwServiceDO">
    update gw_service
    set service_desc = #{serviceDesc,jdbcType=VARCHAR},
    service_type = #{serviceType,jdbcType=VARCHAR},
    service_properties = #{serviceProperties,jdbcType=VARCHAR},
    service_key = #{serviceKey,jdbcType=VARCHAR},
    service_version = #{serviceVersion,jdbcType=VARCHAR},
    service_name = #{serviceName,jdbcType=VARCHAR},
    application_group = #{applicationGroup,jdbcType=VARCHAR},
    is_test = #{isTest,jdbcType=INTEGER},
    test_ip = #{testIp,jdbcType=VARCHAR},
    test_port = #{testPort,jdbcType=VARCHAR},
    is_async = #{isAsync,jdbcType=INTEGER},
    service_retry = #{serviceRetry,jdbcType=INTEGER},
    service_group = #{serviceGroup,jdbcType=VARCHAR},
    async_notify_url = #{asyncNotifyUrl,jdbcType=VARCHAR},
    time_out = #{timeOut,jdbcType=INTEGER},
    add_time = #{addTime,jdbcType=TIMESTAMP},
    update_time = now()
    where service_ukid = #{serviceUkid,jdbcType=BIGINT}
  </update>
  <cache/>


  <!--开发sql-->
  <sql id="selectAllServiceNames_sql">
    FROM
    gw_service
    <where>
      <if test="condition!=null and condition!=''">
        and lower(service_name) LIKE lower('%${condition}%')
      </if>
      <if test="applicationGroup!=null and applicationGroup!=''">
        and application_group = #{applicationGroup}
      </if>
    </where>
    GROUP BY
    service_name
  </sql>

  <select id="selectAllServiceNames"
    parameterType="cn.itbat.whh.gateway.model.dto.GwServiceDTO" resultMap="BaseResultMap">
    SELECT
    service_name,
    max(update_time)
    <include refid="selectAllServiceNames_sql"/>
    ORDER BY
    max(update_time) DESC
    LIMIT #{pageIndex},#{pageSize}
  </select>

  <select id="selectCountServiceNames"
    parameterType="cn.itbat.whh.gateway.model.dto.GwServiceDTO"
    resultType="java.lang.Integer">
    select count(1) from
    (SELECT
    service_name,
    max(update_time)
    <include refid="selectAllServiceNames_sql"/>
    ORDER BY
    max(update_time) DESC) a
  </select>

  <select id="selectGwServiceByServiceName" parameterType="java.util.Map"
    resultType="java.util.Map">
    select gs.*,gma.api_name as gwKeyName,gma.api_version as gwKeyVersion
    from gw_service gs join gw_manage_api gma on gs.service_ukid = gma.api_service_ukid
    where gs.service_name=#{serviceName}
    <if test="condition !=null">
      AND gs.service_key LIKE '%${condition}%'
    </if>
  </select>

  <select id="getGwServiceWithCondition" parameterType="java.util.Map" resultMap="BaseResultMap">
    select * from gw_service gs where gs.service_ukid = #{serviceUkid}
  </select>


  <select id="getApplicationGroups" resultType="java.lang.String">
    SELECT DISTINCT(application_group) FROM gw_service
  </select>

  <insert id="batchInsert" parameterType="java.util.List">
    insert into gw_service values
    <foreach collection="list" separator="," item="item">
      (
      #{item.serviceUkid},#{item.serviceDesc},#{item.serviceType},#{item.serviceProperties}
      ,#{item.serviceKey},#{item.serviceVersion},#{item.serviceName},#{item.applicationGroup}
      ,#{item.isTest},#{item.testIp},#{item.testPort},#{item.isAsync},#{item.serviceRetry}
      ,#{item.serviceGroup},#{item.asyncNotifyUrl},#{item.timeOut},now(),now()
      )
    </foreach>
  </insert>


  <delete id="batchDeleteByServiceUkids" parameterType="java.util.List">
    delete from gw_service where service_ukid in
    <foreach collection="list" open="(" separator="," close=")" item="item">
      #{item}
    </foreach>
  </delete>

</mapper>